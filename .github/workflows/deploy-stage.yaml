  
name: Deploy stage

on:
  pull_request:
    types: [labeled]

jobs:
  push-image:
    if: contains(github.event.pull_request.labels.*.name, 'stage')
    env:
      CACHE_PATH: /tmp/.buildx-cache/release
    runs-on: ubuntu-latest
    steps:
    - name: Builder
      uses: docker/setup-buildx-action@v1
      id: buildx

    - name: Prepare
      id: prep
      run: |
        DOCKER_IMAGE=ghcr.io/${{ github.repository_owner }}/${{github.repository}}/api
        SHA="sha-${GITHUB_SHA::8}"
        if [[ $GITHUB_REF == refs/pull/* ]]; then
          TAGS="$DOCKER_IMAGE:pr-${{ github.event.number }}-$SHA"
        else
          TAGS="$DOCKER_IMAGE:latest,$DOCKER_IMAGE:$SHA"
        fi
        echo ::set-output name=image::${TAGS}

    - name: Restore cache
      uses: actions/cache@v2
      with:
        path: ${{ env.CACHE_PATH }}
        key: ${{ runner.os }}-buildx-release-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-release-
    

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.DOCKER_PAT }}
    
    - name: Build code
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        target: release
        cache-from: type=local,src=${{ env.CACHE_PATH }}
        cache-to: type=local,mode=max,dest=${{ env.CACHE_PATH }}
        tags: ${{ steps.prep.outputs.image }}